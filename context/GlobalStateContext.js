import React, { createContext, useContext, useState } from "react";
import Settings from "../models/Settings";
import Contact from "../models/Contact";
import Doctor from "../models/Doctor";
import Hospital from "../models/Hospital";
import Pharmacy from "../models/Pharmacy";
import Medication from "../models/Medication";
import Insurance from "../models/Insurance";
import Allergy from "../models/Allergy";
import {
  Surgery,
  Diagnosis,
  MedicalTest,
  Illness,
  Injury,
  Immunization,
  MedicalDevice,
} from "../models/MedicalHistory";

// Create the context
const GlobalStateContext = createContext();

export function GlobalStateProvider({ children, value }) {
  // If value is provided (from App.js), use it. Otherwise, create default state here.
  const [user, setUser] = useState(null);
  const [settings, setSettings] = useState(new Settings());
  const [contacts, setContacts] = useState([
    new Contact({
      id: "1",
      firstName: "Dewayne",
      lastName: "Hafenstein",
      cellPhone: "2149013144",
      email: "dewayne@hafenstein.net",
      relationship: "Patient",
    }),
    new Contact({
      id: "2",
      firstName: "Mari",
      lastName: "Hafenstein",
      cellPhone: "2144713218",
      email: "mari@hafenstein.net",
      relationship: "Wife",
    }),
    new Contact({
      id: "3",
      firstName: "Fred",
      lastName: "Flintstone",
      cellPhone: "2145558765",
      email: "fflintstone@bedrock.com",
      relationship: "cartoon character",
    }),
    new Contact({
      id: "4",
      firstName: "Dr. Michael",
      lastName: "Anderson",
      cellPhone: "2145551111",
      homePhone: "2145552222",
      workPhone: "2145553333",
      email: "m.anderson@dallashealth.com",
      relationship: "Emergency Contact",
    }),
    new Contact({
      id: "5",
      firstName: "Sarah",
      lastName: "Williams",
      cellPhone: "2145554444",
      email: "sarah.williams@email.com",
      relationship: "Sister",
    }),
    new Contact({
      id: "6",
      firstName: "James",
      lastName: "Brown",
      cellPhone: "2145555555",
      workPhone: "2145556666",
      email: "jbrown@company.com",
      relationship: "Friend",
    }),
  ]);
  const [doctors, setDoctors] = useState([
    new Doctor({
      id: "1",
      firstName: "John",
      lastName: "Smith",
      specialty: "Family Medicine",
      phone: "2145551234",
      street1: "123 Medical Plaza",
      city: "Dallas",
      state: "TX",
      zip: "75201",
    }),
    new Doctor({
      id: "2",
      firstName: "Sarah",
      lastName: "Johnson",
      specialty: "Cardiology",
      phone: "2145555678",
      street1: "456 Heart Center Dr",
      city: "Plano",
      state: "TX",
      zip: "75024",
    }),
    new Doctor({
      id: "3",
      firstName: "Maria",
      lastName: "Rodriguez",
      specialty: "Endocrinology",
      phone: "2145557890",
      street1: "789 Diabetes Center",
      street2: "Suite 200",
      city: "Irving",
      state: "TX",
      zip: "75039",
    }),
    new Doctor({
      id: "4",
      firstName: "David",
      lastName: "Chen",
      specialty: "Orthopedic Surgery",
      phone: "2145551357",
      street1: "321 Bone & Joint Clinic",
      city: "Richardson",
      state: "TX",
      zip: "75080",
    }),
    new Doctor({
      id: "5",
      firstName: "Jennifer",
      lastName: "Wilson",
      specialty: "Dermatology",
      phone: "2145552468",
      street1: "654 Skin Care Center",
      street2: "Building A",
      city: "Garland",
      state: "TX",
      zip: "75040",
    }),
    new Doctor({
      id: "6",
      firstName: "Robert",
      lastName: "Davis",
      specialty: "Ophthalmology",
      phone: "2145559876",
      street1: "987 Vision Care Plaza",
      city: "Mesquite",
      state: "TX",
      zip: "75149",
    }),
    new Doctor({
      id: "7",
      firstName: "John",
      middleName: "R",
      lastName: "Connolly",
      specialty: "Family Practice",
      phone: "9723901805",
      street1: "410 N Allen Dr",
      city: "Allen",
      state: "TX",
      zip: "75013",
    }),
  ]);
  const [hospitals, setHospitals] = useState([
    new Hospital({
      id: "1",
      name: "Dallas Methodist Hospital",
      street1: "1441 N Beckley Ave",
      city: "Dallas",
      state: "TX",
      zip: "75203",
      phone: "2149471000",
      inNetwork: true,
    }),
    new Hospital({
      id: "2",
      name: "Presbyterian Hospital of Dallas",
      street1: "8200 Walnut Hill Ln",
      city: "Dallas",
      state: "TX",
      zip: "75231",
      phone: "2143451000",
      inNetwork: false,
    }),
    new Hospital({
      id: "3",
      name: "Baylor University Medical Center",
      street1: "3500 Gaston Ave",
      city: "Dallas",
      state: "TX",
      zip: "75246",
      phone: "2148202000",
      inNetwork: true,
    }),
    new Hospital({
      id: "4",
      name: "Texas Health Presbyterian Plano",
      street1: "6200 W Parker Rd",
      city: "Plano",
      state: "TX",
      zip: "75093",
      phone: "9726082000",
      inNetwork: true,
    }),
    new Hospital({
      id: "5",
      name: "Children's Medical Center Dallas",
      street1: "1935 Medical District Dr",
      city: "Dallas",
      state: "TX",
      zip: "75235",
      phone: "2144564000",
      inNetwork: false,
    }),
  ]);
  const [pharmacies, setPharmacies] = useState([
    new Pharmacy({
      id: "1",
      name: "CVS Pharmacy",
      street1: "1234 Main St",
      city: "Dallas",
      state: "TX",
      zip: "75201",
      phone: "2145551234",
      inNetwork: true,
    }),
    new Pharmacy({
      id: "2",
      name: "Walgreens",
      street1: "5678 Oak Ave",
      city: "Plano",
      state: "TX",
      zip: "75024",
      phone: "2145555678",
      inNetwork: false,
    }),
    new Pharmacy({
      id: "3",
      name: "Tom Thumb Pharmacy",
      street1: "2468 Elm Street",
      city: "Richardson",
      state: "TX",
      zip: "75080",
      phone: "2145551357",
      inNetwork: true,
    }),
    new Pharmacy({
      id: "4",
      name: "Kroger Pharmacy",
      street1: "1357 Preston Rd",
      street2: "Inside Kroger Store",
      city: "Frisco",
      state: "TX",
      zip: "75034",
      phone: "2145552468",
      inNetwork: true,
    }),
    new Pharmacy({
      id: "5",
      name: "H-E-B Pharmacy",
      street1: "9876 Forest Ln",
      city: "Dallas",
      state: "TX",
      zip: "75243",
      phone: "2145559876",
      inNetwork: false,
    }),
    new Pharmacy({
      id: "6",
      name: "Costco Pharmacy",
      street1: "4567 Legacy Dr",
      city: "Plano",
      state: "TX",
      zip: "75024",
      phone: "2145554321",
      inNetwork: true,
    }),
  ]);
  const [medications, setMedications] = useState([
    new Medication({
      id: "1",
      drugName: "Lisinopril",
      genericName: "Lisinopril",
      manufacturer: "Lupin Pharmaceuticals",
      doseSize: "10mg",
      dosingInstructions: "Take once daily in the morning",
      rxNumber: "RX12345",
      prescriptionQuantity: "30 tablets",
    }),
    new Medication({
      id: "2",
      drugName: "Metformin",
      genericName: "Metformin HCl",
      manufacturer: "Teva Pharmaceuticals",
      doseSize: "500mg",
      dosingInstructions: "Take twice daily with meals",
      rxNumber: "RX67890",
      prescriptionQuantity: "60 tablets",
    }),
    new Medication({
      id: "3",
      drugName: "Atorvastatin",
      genericName: "Atorvastatin Calcium",
      manufacturer: "Pfizer",
      doseSize: "20mg",
      dosingInstructions: "Take once daily at bedtime",
      rxNumber: "RX11111",
      prescriptionQuantity: "90 tablets",
    }),
    new Medication({
      id: "4",
      drugName: "Omeprazole",
      genericName: "Omeprazole",
      manufacturer: "Dr. Reddy's",
      doseSize: "20mg",
      dosingInstructions: "Take once daily before breakfast",
      rxNumber: "RX22222",
      prescriptionQuantity: "30 capsules",
    }),
    new Medication({
      id: "5",
      drugName: "Aspirin",
      genericName: "Acetylsalicylic Acid",
      manufacturer: "Bayer",
      doseSize: "81mg",
      dosingInstructions: "Take once daily with food",
      rxNumber: "OTC",
      prescriptionQuantity: "120 tablets",
    }),
    new Medication({
      id: "6",
      drugName: "Levothyroxine",
      genericName: "Levothyroxine Sodium",
      manufacturer: "Mylan",
      doseSize: "50mcg",
      dosingInstructions:
        "Take once daily on empty stomach, 1 hour before food",
      rxNumber: "RX33333",
      prescriptionQuantity: "30 tablets",
    }),
  ]);
  const [insurance, setInsurance] = useState([
    new Insurance({
      id: "1",
      providerName: "Blue Cross Blue Shield",
      groupNumber: "12345",
      identificationNumber: "ABC123456789",
      agentName: "John Smith",
      agentStreet1: "123 Insurance Way",
      agentCity: "Dallas",
      agentState: "TX",
      agentZip: "75201",
      agentPhone: "2145551234",
      customerSupportPhone: "8005551234",
      preauthorizationPhone: "8005555678",
    }),
    new Insurance({
      id: "2",
      providerName: "Aetna",
      groupNumber: "67890",
      identificationNumber: "XYZ987654321",
      agentName: "Jane Doe",
      agentStreet1: "456 Policy St",
      agentCity: "Plano",
      agentState: "TX",
      agentZip: "75024",
      customerSupportPhone: "8005559876",
      additionalPhone1: "8005554321",
      additionalPhone1Type: "Find a Doctor",
    }),
    new Insurance({
      id: "3",
      providerName: "United Healthcare",
      groupNumber: "UHC2024",
      identificationNumber: "UH555666777",
      agentName: "Michael Johnson",
      agentStreet1: "789 Health Plaza",
      agentStreet2: "Suite 100",
      agentCity: "Irving",
      agentState: "TX",
      agentZip: "75038",
      agentPhone: "2145557890",
      customerSupportPhone: "8005557890",
      preauthorizationPhone: "8005551111",
      additionalPhone1: "8005552222",
      additionalPhone1Type: "Pharmacy Benefits",
      additionalPhone2: "8005553333",
      additionalPhone2Type: "Mental Health",
    }),
    new Insurance({
      id: "4",
      providerName: "Cigna",
      groupNumber: "CIG789",
      identificationNumber: "CG999888777",
      agentName: "Sarah Williams",
      agentStreet1: "321 Coverage Ave",
      agentCity: "Richardson",
      agentState: "TX",
      agentZip: "75081",
      agentPhone: "2145554444",
      customerSupportPhone: "8005554444",
      preauthorizationPhone: "8005555555",
    }),
  ]);
  const [allergies, setAllergies] = useState([
    new Allergy({
      id: "1",
      allergy: "Penicillin",
      severity: "Life-threatening",
      remediation: "Epinephrine injection immediately, call 911",
      description:
        "Severe anaphylactic reaction within minutes of administration. First noticed during childhood when receiving antibiotic treatment for strep throat. Symptoms include rapid swelling of throat and tongue, difficulty breathing, and loss of consciousness. Must avoid all penicillin-based antibiotics including amoxicillin and ampicillin. Always wear medical alert bracelet and carry emergency medication.",
    }),
    new Allergy({
      id: "2",
      allergy: "Peanuts",
      severity: "Severe",
      remediation: "EpiPen available, avoid all nuts",
      description:
        "Developed in early childhood, confirmed through allergy testing. Reaction occurs with both direct consumption and cross-contamination. Symptoms include hives, swelling, digestive issues, and respiratory distress. Must be vigilant about food labels and restaurant preparation. Family members also avoid peanuts at home to prevent accidental exposure.",
    }),
    new Allergy({
      id: "3",
      allergy: "Shellfish",
      severity: "Shock",
      remediation: "Benadryl 50mg, monitor breathing",
      description:
        "Adult-onset allergy that developed around age 25. Affects all crustaceans including shrimp, crab, and lobster. Reaction typically begins 30-60 minutes after consumption with nausea, vomiting, and skin flushing, progressing to more severe symptoms if untreated. Can usually dine at seafood restaurants with proper precautions.",
    }),
    new Allergy({
      id: "4",
      allergy: "Latex",
      severity: "Rash",
      remediation: "Use latex-free gloves and equipment",
      description:
        "Contact dermatitis that developed from occupational exposure in healthcare setting. Primarily affects hands and forearms when in contact with latex gloves or medical equipment. Symptoms include redness, itching, and small blisters that typically resolve within 24-48 hours of removing exposure. No systemic reactions observed.",
    }),
    new Allergy({
      id: "5",
      allergy: "Ibuprofen",
      severity: "Pain",
      remediation: "Use acetaminophen instead, avoid all NSAIDs",
      description:
        "Causes severe stomach pain and gastric irritation. Discovered during treatment for headaches when patient experienced intense abdominal cramping and nausea. All NSAIDs including aspirin, naproxen, and diclofenac should be avoided. Acetaminophen is safe alternative for pain relief.",
    }),
    new Allergy({
      id: "6",
      allergy: "Pollen (Ragweed)",
      severity: "Discomfort",
      remediation: "Antihistamines during season, keep windows closed",
      description:
        "Seasonal allergy that occurs from late summer through fall. Symptoms include sneezing, runny nose, watery eyes, and mild congestion. Managed with over-the-counter antihistamines like loratadine. Symptoms worsen on high pollen count days and improve with indoor air filtration.",
    }),
    new Allergy({
      id: "7",
      allergy: "Cats",
      severity: "Itching",
      remediation: "Antihistamine before exposure, limit contact time",
      description:
        "Mild allergic reaction to cat dander causing itchy, watery eyes and occasional sneezing. Symptoms typically begin within 15-30 minutes of exposure and resolve within a few hours of leaving the environment. Can visit homes with cats for short periods with pre-medication.",
    }),
  ]);

  const [medicalHistory, setMedicalHistory] = useState([
    new Surgery({
      id: "1",
      date: "2023-03-15",
      procedure: "Appendectomy",
      surgeon: "Dr. Sarah Johnson",
      hospital: "Dallas Methodist Hospital",
      outcome: "Successful - full recovery",
      notes:
        "Laparoscopic appendectomy performed due to acute appendicitis. No complications during surgery. Patient recovered well with minimal scarring.",
    }),
    new Surgery({
      id: "2",
      date: "2021-08-10",
      procedure: "Cataract Surgery - Right Eye",
      surgeon: "Dr. Robert Davis",
      hospital: "Dallas Eye Surgery Center",
      complications: "None",
      outcome: "Excellent vision improvement",
      notes:
        "Outpatient procedure using phacoemulsification technique. Intraocular lens implanted successfully. Vision improved from 20/200 to 20/25.",
    }),
    new Diagnosis({
      id: "3",
      date: "2022-08-20",
      condition: "Type 2 Diabetes",
      diagnosingDoctor: "Dr. John Smith",
      severity: "moderate",
      status: "chronic",
      treatment: "Metformin 500mg twice daily, dietary changes",
      notes:
        "Diagnosed during routine physical. HbA1c was 8.2%. Started on medication and lifestyle modifications. Regular monitoring required.",
    }),
    new Diagnosis({
      id: "4",
      date: "2023-05-12",
      condition: "Hypertension",
      diagnosingDoctor: "Dr. John Smith",
      severity: "mild",
      status: "active",
      treatment: "Lisinopril 10mg daily, low sodium diet",
      notes:
        "Blood pressure consistently elevated above 140/90. Started on ACE inhibitor with good response. Patient monitoring BP at home.",
    }),
    new Diagnosis({
      id: "5",
      date: "2024-01-05",
      condition: "Hypothyroidism",
      diagnosingDoctor: "Dr. Maria Rodriguez",
      severity: "mild",
      status: "active",
      treatment: "Levothyroxine 50mcg daily",
      notes:
        "TSH elevated at 8.5 (normal 0.4-4.0). Symptoms of fatigue and cold intolerance. Good response to thyroid hormone replacement.",
    }),
    new MedicalTest({
      id: "6",
      date: "2024-01-10",
      testName: "Complete Blood Count",
      testType: "blood",
      results: "All values within normal range",
      orderingDoctor: "Dr. John Smith",
      facility: "LabCorp",
      notes: "Annual physical exam bloodwork. All parameters normal.",
    }),
    new MedicalTest({
      id: "7",
      date: "2023-11-15",
      testName: "Chest X-Ray",
      testType: "imaging",
      results: "Clear lung fields, no abnormalities detected",
      orderingDoctor: "Dr. John Smith",
      facility: "Dallas Methodist Imaging",
      notes: "Routine screening. No signs of infection or masses.",
    }),
    new MedicalTest({
      id: "8",
      date: "2024-02-20",
      testName: "Colonoscopy",
      testType: "diagnostic",
      results: "2 small polyps removed, benign on pathology",
      normalRange: "No polyps or masses",
      orderingDoctor: "Dr. James Miller",
      facility: "Dallas Gastroenterology Center",
      notes:
        "Screening colonoscopy. Polyps were adenomatous but benign. Next screening in 5 years.",
    }),
    new MedicalTest({
      id: "9",
      date: "2023-12-05",
      testName: "Mammogram",
      testType: "imaging",
      results: "BI-RADS 2 - Benign findings",
      normalRange: "BI-RADS 1 or 2",
      orderingDoctor: "Dr. Jennifer Wilson",
      facility: "Women's Imaging Center",
      notes:
        "Annual screening mammogram. Some benign calcifications noted, routine follow-up in 1 year.",
    }),
    new Illness({
      id: "10",
      onsetDate: "2023-12-01",
      resolutionDate: "2023-12-10",
      illness: "Influenza A",
      symptoms: "Fever, body aches, cough, fatigue",
      treatment: "Rest, fluids, Tamiflu",
      doctor: "Dr. John Smith",
      notes:
        "Seasonal flu that resolved with antiviral treatment and supportive care.",
    }),
    new Illness({
      id: "11",
      onsetDate: "2024-06-15",
      resolutionDate: "2024-06-22",
      illness: "Bronchitis",
      symptoms: "Persistent cough, chest congestion, mild fever",
      treatment: "Amoxicillin 500mg TID x 7 days, expectorant",
      doctor: "Dr. John Smith",
      notes:
        "Bacterial bronchitis following viral upper respiratory infection. Responded well to antibiotic therapy.",
    }),
    new Injury({
      id: "12",
      date: "2021-06-15",
      injuryType: "Sprained ankle",
      bodyPart: "Left ankle",
      cause: "Sports injury during basketball",
      severity: "moderate",
      treatment: "RICE protocol, physical therapy",
      healingTime: "6 weeks",
      notes:
        "Grade 2 ankle sprain. Required 2 weeks of immobilization followed by physical therapy.",
    }),
    new Injury({
      id: "13",
      date: "2022-03-22",
      injuryType: "Minor cut",
      bodyPart: "Right hand",
      cause: "Kitchen accident while cooking",
      severity: "minor",
      treatment: "Cleaned wound, applied bandage, antibiotic ointment",
      healingTime: "1 week",
      notes:
        "Small laceration on palm from kitchen knife. Healed without complications or scarring.",
    }),
    new Immunization({
      id: "14",
      date: "2023-09-15",
      vaccine: "COVID-19 Booster",
      manufacturer: "Pfizer",
      administeredBy: "CVS Pharmacy",
      reactions: "Mild soreness at injection site",
      notes: "Annual booster shot. No significant adverse reactions.",
    }),
    new Immunization({
      id: "15",
      date: "2023-10-01",
      vaccine: "Influenza Vaccine",
      manufacturer: "Sanofi",
      administeredBy: "Dr. John Smith's Office",
      reactions: "None",
      nextDueDate: "2024-10-01",
      notes: "Annual flu shot. No reactions reported.",
    }),
    new Immunization({
      id: "16",
      date: "2022-04-15",
      vaccine: "Tdap (Tetanus, Diphtheria, Pertussis)",
      manufacturer: "GlaxoSmithKline",
      administeredBy: "Travel Clinic",
      reactions: "Mild arm soreness for 2 days",
      nextDueDate: "2032-04-15",
      notes: "Booster shot before international travel. Good for 10 years.",
    }),
    new Immunization({
      id: "17",
      date: "2021-03-20",
      vaccine: "Shingles Vaccine (Shingrix)",
      manufacturer: "GlaxoSmithKline",
      administeredBy: "Walgreens Pharmacy",
      reactions: "Fatigue and mild fever for 1 day",
      notes:
        "First dose of two-dose series. Second dose scheduled for May 2021.",
    }),
    new Immunization({
      id: "18",
      date: "2024-01-15",
      vaccine: "Pneumococcal Vaccine (Prevnar 20)",
      manufacturer: "Pfizer",
      administeredBy: "Dr. John Smith's Office",
      reactions: "None",
      notes:
        "One-time adult pneumonia vaccine. Recommended due to diabetes diagnosis.",
    }),
    new MedicalDevice({
      id: "19",
      date: "2022-11-08",
      deviceName: "Pacemaker",
      manufacturer: "Medtronic",
      modelNumber: "W4TR01",
      serialNumber: "RNP620699S",
      implantDate: "2022-11-08",
      doctor: "Dr. Sarah Johnson",
      facility: "Dallas Methodist Hospital Cardiac Center",
      batteryLife: "8-12 years",
      nextMaintenance: "2025-11-08",
      notes:
        "Dual-chamber pacemaker implanted due to symptomatic bradycardia. Device functioning normally. Remote monitoring activated. Patient tolerating well with improved exercise capacity.",
    }),
    new MedicalDevice({
      id: "20",
      date: "2023-07-20",
      deviceName: "Insulin Pump",
      manufacturer: "Tandem Diabetes Care",
      modelNumber: "t:slim X2",
      serialNumber: "TSX240789",
      implantDate: "2023-07-20",
      doctor: "Dr. Maria Rodriguez",
      facility: "Dallas Diabetes Center",
      batteryLife: "Rechargeable - daily charging",
      nextMaintenance: "2024-07-20",
      notes:
        "Continuous glucose monitoring integrated insulin pump. Improved glucose control significantly. HbA1c reduced from 8.2% to 6.8%. Patient trained on pump management and troubleshooting.",
    }),
  ]);

  // Merge provided values with defaults
  const contextValue = {
    user: value?.user ?? user,
    setUser: value?.setUser ?? setUser,
    settings: value?.settings ?? settings,
    setSettings: value?.setSettings ?? setSettings,
    contacts: value?.contacts ?? contacts,
    setContacts: value?.setContacts ?? setContacts,
    doctors: value?.doctors ?? doctors,
    setDoctors: value?.setDoctors ?? setDoctors,
    hospitals: value?.hospitals ?? hospitals,
    setHospitals: value?.setHospitals ?? setHospitals,
    pharmacies: value?.pharmacies ?? pharmacies,
    setPharmacies: value?.setPharmacies ?? setPharmacies,
    medications: value?.medications ?? medications,
    setMedications: value?.setMedications ?? setMedications,
    insurance: value?.insurance ?? insurance,
    setInsurance: value?.setInsurance ?? setInsurance,
    allergies: value?.allergies ?? allergies,
    setAllergies: value?.setAllergies ?? setAllergies,
    medicalHistory: value?.medicalHistory ?? medicalHistory,
    setMedicalHistory: value?.setMedicalHistory ?? setMedicalHistory,
  };

  return (
    <GlobalStateContext.Provider value={contextValue}>
      {children}
    </GlobalStateContext.Provider>
  );
}

export function useGlobalState() {
  return useContext(GlobalStateContext);
}

export { GlobalStateContext };
